name: CI Pipeline (Free Tier)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Job 1: Code Quality
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript type checking
        run: npm run type-check
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  # Job 2: Testing
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests with coverage
        run: npm run test:ci
        
      - name: Display coverage summary
        run: |
          echo "✅ Tests completed successfully!"
          echo "Coverage report generated locally"

  # Job 3: Build & Validate
  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: [quality-checks, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build extension
        run: npm run build
        
      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la dist/
          echo "Checking manifest.json..."
          cat dist/manifest.json
          echo "Checking if all required files exist..."
          test -f dist/manifest.json || exit 1
          test -d dist/assets || exit 1
          test -f dist/service-worker-loader.js || exit 1
          
      - name: Validate manifest
        run: |
          echo "Validating manifest.json..."
          node -e "
            const manifest = require('./dist/manifest.json');
            console.log('✅ Manifest version:', manifest.manifest_version);
            console.log('✅ Extension name:', manifest.name);
            console.log('✅ Extension version:', manifest.version);
            
            // Check required fields
            if (!manifest.name || !manifest.version || !manifest.description) {
              console.error('❌ Missing required manifest fields');
              process.exit(1);
            }
            
            console.log('✅ Manifest validation passed');
          "
          
      - name: Check bundle size
        run: |
          echo "Bundle Size Analysis:"
          echo "====================="
          find dist -name "*.js" -exec wc -c {} + | sort -n
          echo ""
          echo "Total bundle size:"
          du -sh dist/
          
          # Check if main bundle is under 500KB
          MAIN_BUNDLE_SIZE=$(find dist/assets -name "index-*.js" -exec wc -c {} + | awk '{print $1}')
          echo "Main bundle size: $MAIN_BUNDLE_SIZE bytes"
          if [ "$MAIN_BUNDLE_SIZE" -gt 512000 ]; then
            echo "❌ Main bundle size exceeds 500KB limit"
            exit 1
          else
            echo "✅ Main bundle size is within limits"
          fi
          
      - name: Package extension (optional)
        run: npm run pack || echo "⚠️ Packaging failed, but build is successful"
        continue-on-error: true 